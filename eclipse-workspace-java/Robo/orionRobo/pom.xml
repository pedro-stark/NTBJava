<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.ntb</groupId>
	<artifactId>orionRobo</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>orionRobo</name>
	<url>http://maven.apache.org</url>
	<description>
    Contain various examples for wagon-maven-plugin.
    When run from command line, -Dversion=a.valid.version must be passed in.
    Note the use of shared configurations, ie
    downloadDirectory
    </description>


	<properties>
		<jersey.version>2.28</jersey.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<ipAdressRaspPI>169.254.1.2</ipAdressRaspPI>

<!-- 		<ipAdressRaspPI>192.168.72.186</ipAdressRaspPI> -->

		<!-- orionRoboControl -->
		<mainClass>ch.ntb.orionRobo.RoboControl</mainClass>
		<!-- TestMethodeGyro QMC5883L -->
<!-- 		<mainClass>ch.ntb.orionRobo.networking.webService.WebService</mainClass> -->
		<!-- TestMethodeGyro HMC5883L -->
		<!-- <mainClass>ch.ntb.orionRobo.component.gyro.HMC5883L</mainClass> -->
		<!-- TestMethodeGyro ICM20948 -->
<!-- 		<mainClass>ch.ntb.orionRobo.networking.NTB_RN131_Wifi</mainClass> -->
		<!-- TestMethodeGyro VL53L1X -->
		<!-- <mainClass>ch.ntb.orionRobo.component.VL53L1X</mainClass> -->
		<!-- TestMethode Servo -->
<!-- 		<mainClass>ch.ntb.orionRobo.component.Servo</mainClass> -->
		<!-- TestMethode Motor -->
		<!-- <mainClass>ch.ntb.orionRobo.component.DCMotor.Motor</mainClass> -->
		<!-- TestMethode EnviromentScanner -->
<!-- 		<mainClass>ch.ntb.orionRobo.environmentRecognition.EnvironmentScanner</mainClass> -->
		<!-- <mainClass>ch.ntb.orionRobo.component.VoiceCoil.VoiceCoil</mainClass> -->
<!-- 		<mainClass>ch.ntb.orionRobo.drive.Drive</mainClass> -->
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.glassfish.jersey</groupId>
				<artifactId>jersey-bom</artifactId>
				<version>${jersey.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.11.1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.11.1</version>
		</dependency>


		<dependency>
			<groupId>org.bidib.com.pi4j</groupId>
			<artifactId>pi4j-core</artifactId>
			<version>1.2.M1</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-math3 -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-math3</artifactId>
			<version>3.6.1</version>
		</dependency>


		<dependency>
			<groupId>org.glassfish.jersey.containers</groupId>
			<artifactId>jersey-container-grizzly2-http</artifactId>
		</dependency>
		<dependency>
			<groupId>org.glassfish.jersey.inject</groupId>
			<artifactId>jersey-hk2</artifactId>
		</dependency>
				<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.1</version>
		</dependency>

		<dependency>
			<groupId>org.glassfish.jersey.media</groupId>
			<artifactId>jersey-media-json-binding</artifactId>
		</dependency>

	</dependencies>


	<profiles>
		<profile>
			<id>production</id>
		</profile>

		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>2.0.0</version>

						<executions>
							<execution>
								<id>upload-config-to-raspberry</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<fromFile>${project.basedir}/src/main/resources/config.properties</fromFile>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-service-to-raspberry</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<fromFile>${project.basedir}/src/main/resources/orionRobo.service</fromFile>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-jar-to-raspberry</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.jar</fromFile>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-webConten</id>
								<phase>package</phase>
								<goals>
									<goal>upload</goal>
								</goals>
								<configuration>
									<fromDir>${project.basedir}/src/main/resources/www</fromDir>
									<includes>*,*/*</includes>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
									<toDir>www</toDir>
									<serverId>raspberryPi</serverId>
								</configuration>
							</execution>
							<execution>
								<id>execute-test-commands</id>
								<phase>package</phase>
								<goals>
									<goal>sshexec</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
									<commands>
										<command>sed -i -E 's/VERSION=.*/VERSION=${project.version}/g' /opt/orionRobo/orionRobo.service</command>
										<command>sed -i -E 's/JARFILENAME=.*/JARFILENAME=${project.name}/g' /opt/orionRobo/orionRobo.service</command>
										<command>sed -i -E 's/PARAM=.*/PARAM=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=6006/g' /opt/orionRobo/orionRobo.service</command>
										<command>sudo systemctl daemon-reload</command>
										<command>sudo systemctl restart orionRobo</command>
									</commands>
								</configuration>
							</execution>
							
						</executions>
					</plugin>

				</plugins>

			</build>
		</profile>
		<profile>
			<id>dev-run</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>wagon-maven-plugin</artifactId>
						<version>2.0.0</version>

						<executions>
							<execution>
								<id>upload-config-to-raspberry</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<fromFile>${project.basedir}/src/main/resources/config.properties</fromFile>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-service-to-raspberry</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<fromFile>${project.basedir}/src/main/resources/orionRobo.service</fromFile>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
								</configuration>
							</execution>
							<execution>
								<id>upload-jar-to-raspberry</id>
								<phase>package</phase>
								<goals>
									<goal>upload-single</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<fromFile>${project.build.directory}/${project.build.finalName}.jar</fromFile>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
								</configuration>
							</execution>
							<execution>
								<id>execute-test-commands</id>
								<phase>package</phase>
								<goals>
									<goal>sshexec</goal>
								</goals>
								<configuration>
									<serverId>raspberryPi</serverId>
									<url>scp://${ipAdressRaspPI}/opt/orionRobo</url>
									<commands>
										<command>sed -i -E 's/VERSION=.*/VERSION=${project.version}/g'
											/opt/orionRobo/orionRobo.service</command>
										<command>sed -i -E
											's/JARFILENAME=.*/JARFILENAME=${project.name}/g'
											/opt/orionRobo/orionRobo.service</command>
										<command>sed -i -E
											s/PARAM=.*/PARAM=-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=6006/g'
											/opt/orionRobo/orionRobo.service</command>
										<command>sudo systemctl daemon-reload</command>
										<command>sudo systemctl restart orionRobo</command>
									</commands>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>

			</build>
		</profile>
	</profiles>


	<build>


		<finalName>${project.name}-${project.version}</finalName>
		<extensions>
			<extension>
				<groupId>org.apache.maven.wagon</groupId>
				<artifactId>wagon-ssh</artifactId>
				<version>3.0.0</version>
			</extension>
		</extensions>

		<plugins>

			<!-- download source code in Eclipse, best practice -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>

			<!-- Set a JDK compiler level -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Make this jar executable -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/config.properties</exclude>
						<exclude>**/orionRobo.service</exclude>
					</excludes>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<!-- Jar file entry point -->
							<mainClass>${mainClass}</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<excludes>
								<exclude>**/config.properties</exclude>
								<exclude>**/orionRobo.service</exclude>
								<exclude>META-INF/*.SF</exclude>
								<exclude>META-INF/*.DSA</exclude>
								<exclude>META-INF/*.RSA</exclude>
							</excludes>
							<archive>
								<manifest>
									<mainClass>${mainClass}</mainClass>
								</manifest>
							</archive>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0.1</version>
				<executions>
					<execution>
						<id>copy-config</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<sourceFile>${project.basedir}/src/main/resources/config.properties</sourceFile>
							<destinationFile>${project.build.directory}/orionRobo/config.properties</destinationFile>
						</configuration>
					</execution>
					<execution>
						<id>copy-service</id>
						<phase>install</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<sourceFile>${project.basedir}/src/main/resources/orionRobo.service</sourceFile>
							<destinationFile>${project.build.directory}/orionRobo/orionRobo.service</destinationFile>
						</configuration>
					</execution>

				</executions>
			</plugin>
		</plugins>
	</build>

</project>
